{"version":3,"sources":["reportWebVitals.js","static/logo.png","components/Header.jsx","components/Footer.jsx","components/Flowdemo.jsx","components/ExeVisualization.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","props","handleShow","oldValue","state","show","setState","className","href","src","Logo","width","height","alt","Button","variant","onClick","Modal","this","onHide","dialogClassName","closeButton","Title","Body","frameborder","allow","allowfullscreen","title","Footer","Component","role","Flowdemo","code","opt","x","y","fill","scale","symbols","start","end","flowstate","target","elementText","newCode","e","JSON","parse","value","console","log","chartCode","options","elText","ExeVisualization","renderElseArr","elseArr","arr","split","i","length","replace","push","renderFlowchartCode","fcCode","gapIndex","indexOf","defArr","slice","conArr","renderActiveBlock","index","blockIndex","retrieveDefArr","newFlowChartCode","concat","join","flowChartComponent","current","handleCodeChange","generateCodeTable","result","sourceCodeArray","el","exeIndex","gotoNextLine","gotoLastLine","onFocusCode","pyTargetCode","cursor","row","alert","sourceCode","React","createRef","mode","theme","onCursorChange","name","editorProps","$blockScrolling","setOptions","wrapBehavioursEnabled","type","id","editCode","style","minWidth","ref","App","renderHighlight","pyIndex","markers","llc","body","py_index","pseudo_index","findLLC","py2llcmap","startRow","startCol","endRow","endCol","onsourceCodeChange","newValue","pseudoCodeStatus","originCode","whitenOriginCode","codeArr","whitenArr","blankIndex","replaceAll","convertCode","transformText","whitenCode","fetch","res","json","data","pseudoCode","map","sequenceFlowChart","defDict","j","parseInt","temp","justifyExecution","flowChartCode","visualizeExecutionStatus","insertSampleCode","sampleCode","samples","backToEditPage","currentCode","flowChartCodeStatus","modalStatus","Sample","showTutorial","onChange","ontargetCodeChange","highlightActiveLine","sample","root","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2724fbfb.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo.9545f0dd.png\";","import React, { Component } from 'react';\nimport {Modal,Button} from \"react-bootstrap\";\nimport Logo from \"../../src/static/logo.png\"\n\nclass Header extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            show:false\n        }\n\n    }\n    handleShow = () =>{\n        let oldValue = this.state.show;\n        this.setState({\n            show:!oldValue\n        })\n    }\n    render(){\n        return(\n            <div>         \n            <nav className=\"navbar navbar-light bg-dark justify-content-between\">\n                <a className=\"navbar-brand\" href=\"#\">\n                    <img src={Logo} width=\"120\" height=\"30\" alt=\"\"/>  \n                </a>\n\n                <Button variant=\"primary\" onClick={()=>this.handleShow()}>\n                    Show Tutorial\n                </Button>\n            </nav>\n        \n            <Modal \n            show={this.state.show} \n            onHide={()=>this.handleShow()}\n            dialogClassName=\"tutorial-modal\">\n                <Modal.Header closeButton>\n                    <Modal.Title>Tutorial Video</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <iframe src=\"https://player.vimeo.com/video/737400856?h=ad16eb8afb&amp;badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=58479\" width=\"958\" height=\"500\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen title=\"Screen Recording 2022-08-07 at 01.31.07.mov\"></iframe>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={()=>this.handleShow()}>\n                    Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass Footer extends Component{\n    constructor(props){\n        super(props)\n    }\n    render(){\n        return(\n            <footer className=\"text-right text-lg-start text-white bg-dark fixed-bottom\">\n                <hr className=\"my-3\"/>\n                <div className='text-center'>Mengqi Jiang from University of Glasgow</div>\n                <div className='text-center'>Inspired from <a href='https://pythontutor.com/'>PythonTutor</a>&<a href='https://godbolt.org/'>GodBolt</a></div>\n          \n                <div className='text-center'>\n                    <a className=\"btn btn-outline-light btn-floating m-1 text-white text-right\" role=\"button\" href='https://github.com/JSparksssss/PyToAsm/issues'>\n                        <i className=\"fa-brands fa-github\"></i>\n                    </a>\n                    <span className='text-light'> @Report issues</span>\n                </div>\n            </footer>\n        )\n    }\n}\n\nexport default Footer;","import React, { Component } from \"react\";\nimport Flowchart from \"react-simple-flowchart\";\n\nexport class Flowdemo extends Component {\n  constructor(props) {\n    super(props);\n    const code = `${this.props.code}`;\n    const opt = {\n      x: 0,\n      y: 0,\n      \"line-width\": 3,\n      \"line-length\": 50,\n      \"text-margin\": 10,\n      \"font-size\": 14,\n      \"font-color\": \"black\",\n      \"line-color\": \"black\",\n      \"element-color\": \"black\",\n      fill:\"white\",\n      \"yes-text\": \"yes\",\n      \"no-text\": \"no\",\n      \"arrow-end\": \"block\",\n      scale: 1,\n      symbols: {\n        start: {\n          \"font-color\": \"red\",\n          \"element-color\": \"green\",\n          \"font-weight\": \"bold\"\n        },\n        end: {\n          \"font-color\": \"red\",\n          \"element-color\": \"green\",\n          \"font-weight\": \"bold\"\n        }\n      },\n      flowstate: {\n        target: { fill: \"yellow\" }\n      }\n    };\n\n    this.state = {\n      code,\n      opt,\n      elementText: \"none\"\n    };\n  }\n\n  handleCodeChange(newCode) {\n    this.setState({\n      code: newCode\n    },()=>{\n      // console.log(this.state.code);\n    });\n  }\n\n  handleOptChange(e) {\n    this.setState({\n      opt: JSON.parse(e.target.value)\n    });\n  }\n  elText(e){\n    console.log(e)\n  }\n  render() {\n    const { code, opt, elementText } = this.state;\n    return (\n        <Flowchart  \n            chartCode={code}\n            options={opt}\n            onClick={(elementText) => this.elText(elementText)}\n          />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Flowdemo } from './Flowdemo';\nimport AceEditor from \"react-ace\";\n\nclass ExeVisualization extends Component{\n    constructor(props){\n        super(props);\n        this.sourceCodeArray = this.props.sourceCode.split(\"\\n\");\n        this.fcCode = this.props.fcCode;\n        this.defArr = [];\n        this.conArr = [];\n        this.elseArr = this.renderElseArr(this.props.sourceCode);\n        this.state = {\n            fcCode:this.props.fcCode,\n            exeIndex:0,\n            defArr:[],\n            conArr:[],\n            elseArr:[]\n            \n        }\n        this.flowChartComponent = React.createRef()\n\n    }\n\n    //There are not blocks for else:, we should list all else: indexes for skipping them.\n    renderElseArr = (code) =>{\n        let elseArr = []\n        let arr = code.split(\"\\n\");\n        for(var i = 0; i < arr.length; i++){\n            if(arr[i].replace(/\\s*/g,\"\") == \"else:\"){\n                elseArr.push(i);\n            }\n                \n        }\n        return elseArr\n    }\n    \n    renderFlowchartCode = () =>{\n        let arr = this.fcCode.split(\"\\n\");\n\n        //Define the first \"\\n\" in flowchart code. That is the gap between definition and connection\n        var gapIndex = arr.indexOf(\"\");\n\n        this.defArr = arr.slice(0,gapIndex);\n        this.conArr = arr.slice(gapIndex,arr.length-1);\n        \n\n    }\n\n    renderActiveBlock = (index) =>{\n        this.renderFlowchartCode();\n\n        let blockIndex = index+1; //Skip the st\n        \n        let retrieveDefArr = this.defArr;\n        retrieveDefArr[blockIndex] = retrieveDefArr[blockIndex] + \"|target\";\n        let concatFlowChartCodeArr = retrieveDefArr.concat(this.conArr)\n        let newFlowChartCode  = concatFlowChartCodeArr.join(\"\\n\")\n        this.setState({\n            fcCode:newFlowChartCode\n        },()=>{\n            this.flowChartComponent.current.handleCodeChange(this.state.fcCode)\n        })\n        \n    }\n\n    generateCodeTable = () =>{\n        var result = []\n        for(var i = 0; i < this.sourceCodeArray.length; i++){\n            var el = <tr className={\"visualize-code \"+ (this.state.exeIndex === i ? \"pta-highlight-code\":\"\")}>{this.sourceCodeArray[i]}</tr>\n            result.push(el)\n        }\n        return(\n            <table>\n                {result}\n            </table>)\n    }\n\n    gotoNextLine = () =>{\n        this.setState({\n            exeIndex:this.state.exeIndex + 1\n        })\n    }\n\n    gotoLastLine = () =>{\n        this.setState({\n            exeIndex:this.state.exeIndex - 1\n        })\n    }\n\n    \n    onFocusCode = (e) =>{\n        //Get the target code from the original editor\n        let pyTargetCode = e.cursor.row\n        let blockIndex = pyTargetCode\n\n        //Skip all else: \n        for(let i = 0; i < this.elseArr.length; i++){\n            if(pyTargetCode > this.elseArr[i]){\n                blockIndex = blockIndex - 1\n            }\n            else if (pyTargetCode == this.elseArr[i]){\n                alert(\"There is not a related block in flowchart.\")\n            }\n        }\n\n        this.renderActiveBlock(blockIndex);\n        \n\n    }\n\n    render(){\n        return(<div className='container'>\n            <div className='row'>  \n            <AceEditor\n              className=\"col\"\n              mode=\"python\"\n              theme=\"github\"\n              onCursorChange = {(e)=>this.onFocusCode(e)}\n              name=\"PYTHON_CODE\"\n              editorProps={{\n                  $blockScrolling: true,\n              }}\n              setOptions={{\n                // readOnly:true,\n                wrapBehavioursEnabled:true\n              }}\n              value={this.props.sourceCode}\n                />\n                <div className='col'>\n                    {/* <button type=\"button\" className=\"btn btn-warning m-4 pta-btn-text\" id=\"forward\" onClick={()=>this.gotoNextLine()} style={{minWidth:\"200px\"}}>Next Code</button>\n                    <button type=\"button\" className=\"btn btn-warning m-4 pta-btn-text\" id=\"rewind\" onClick={()=>this.gotoLastLine()}style={{minWidth:\"200px\"}}>Last Code</button> */}\n                    <button type=\"button\" className=\"btn btn-danger m-4 pta-btn-text\" id=\"edit-code\" onClick={this.props.editCode}style={{minWidth:\"200px\"}}>Back to edit code</button>\n                </div>\n                <div id=\"canvas\" className='bg-light col'>\n                    <Flowdemo\n                        ref = {this.flowChartComponent}\n                        code={this.state.fcCode}\n                    /></div>\n                </div>\n                <footer className='bg-dark' style={{\"height\":\"8em\"}}>\n\n                </footer>\n            </div>)\n    }\n}\n\nexport default ExeVisualization;","import './App.css';\nimport './global.css';\n\nimport React, { Component }  from 'react';\nimport AceEditor from \"react-ace\";\n\nimport 'ace-builds/webpack-resolver';\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/theme-github\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nimport Sample from \"./Data/sample.json\"\nimport ExeVisualization from './components/ExeVisualization';\n\nfunction findLLC(pyIndex,body){\n  for(var i = 0; i < body.length; i++){\n    if(pyIndex === body[i].py_index){\n      return body[i].pseudo_index\n  }\n  }\n  return null \n}\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      originCode:\"\",\n      pseudoCode:\"\",\n      currentCode:\"\",\n      flowChartCode:\"\",\n      pseudoCodeStatus:false,\n      flowChartCodeStatus:false,\n      visualizeExecutionStatus:false,\n      modalStatus:false,\n      markers:[],\n      py2llcmap:null\n    };\n    this.samples = Sample.samples\n  }\n\n  renderHighlight = (pyIndex) =>{\n    this.setState({markers:[]})\n\n    //initialize the Highlight markers\n    let markers = []\n\n    // //Find the index of low level code\n    // console.log(this.state.py2llcmap)\n    var llc = findLLC(pyIndex,this.state.py2llcmap)\n\n    try{\n        for (var i = 0; i < llc.length; i++){\n          var index = llc[i]\n          markers.push({startRow:index,startCol:0,endRow:index+1,endCol:0,className:\"highlight\",type:\"background\"});\n        }\n\n        this.setState({markers:markers},()=>{\n        })\n\n    }catch(e){\n      console.log(e)\n      alert(\"This pseudo code is not match\")\n    }\n    \n    // markers.push({startRow:0,startCol:0,endRow:1,endCol:0,className:\"ace_active-line\",type:\"background\"});\n\n    \n\n  }\n\n  onsourceCodeChange = (newValue) =>{\n    if(this.state.pseudoCodeStatus === true){\n      this.setState({pseudoCodeStatus:false,markers:[]})\n    }\n    // console.log(newValue)\n    this.setState({\n      originCode:newValue\n    })\n  }\n\n  onFocusCode = (e) =>{\n    if(this.state.pseudoCodeStatus === true){\n      //Get the target code from the original editor\n      var pyTargetCode = e.cursor.row\n      this.renderHighlight(pyTargetCode)\n    }\n  }\n  whitenOriginCode = (code) =>{\n    var codeArr = code.split(\"\\n\");\n    var whitenArr = [];\n    var blankIndex = [];\n    var whitenCode = \"\";\n    for (var i = 0; i < codeArr.length; i++){\n      let whitenTab = codeArr[i].replaceAll(\"    \",\"\");\n      if (whitenTab == \"\"){\n        blankIndex.push(i);\n      }\n    }\n    for (var i = 0; i < codeArr.length; i++){\n      if(blankIndex.indexOf(i) === -1){\n        whitenArr.push(codeArr[i]);\n      }\n    }\n    whitenCode = whitenArr.join(\"\\n\")\n    return whitenCode\n  }\n\n  convertCode = () =>{\n    let transformText = this.state.originCode.replaceAll(\"\\n\",\"(enter)\").replaceAll(\"\\t\",\"(tab)\").replaceAll(\"+\",\"(add)\");\n    //Whiten the code for displaying\n    let whitenCode = this.whitenOriginCode(this.state.originCode)\n    //Convert Code \n    fetch(\"/llc?code=\" + transformText).then(res => res.json()).then(data =>{\n      if(data.code == \"\"){\n        alert(\"Convert to pseudo code failed. Please modify the code.\")\n      }\n      else{\n        this.setState({\n        markers:[],\n        originCode:whitenCode,\n        pseudoCodeStatus:true,\n        pseudoCode:data.code,\n        py2llcmap:data.map\n      })\n      }\n         \n    });\n  }\n\n  sequenceFlowChart = (code) =>{\n    let arr = code.split(\"\\n\");\n\n    //Define the first \"\\n\" in flowchart code. That is the gap between definition and connection\n    let gapIndex = arr.indexOf(\"\");\n\n    let defArr = arr.slice(0,gapIndex);\n    let conArr = arr.slice(gapIndex,arr.length);\n\n    let defDict = []\n\n    for (let i = 0; i < defArr.length; i++){\n      let id = defArr[i].split(\"=>\")[0]\n      let content = defArr[i].split(\"=>\")[1]\n      let el = {\"id\":id,\"content\":content}\n      defDict.push(el)\n    }\n\n    for (let i = 0; i < defDict.length - 1; i++){\n      for (let j = i; j < defDict.length - 1; j++){\n        if(parseInt(defDict[j][\"id\"].replace(/[^0-9]/ig,'')) > parseInt(defDict[j+1][\"id\"].replace(/[^0-9]/ig,''))){\n          let temp = defDict[j]\n          defDict[j] = defDict[j+1]\n          defDict[j+1] = temp\n        }\n      }\n    }\n    \n    for (let i = 0; i < defDict.length; i++){\n      let el = defDict[i][\"id\"]+\"=>\"+defDict[i][\"content\"]\n      defArr[i] = el\n    }\n    let result = defArr.concat(conArr)\n    return result.join(\"\\n\")\n  }\n\n  justifyExecution = () =>{\n    let transformText = this.state.originCode.replaceAll(\"\\n\",\"(enter)\").replaceAll(\"\\t\",\"(tab)\").replaceAll(\"+\",\"(add)\");\n    //Convert Code \n    fetch(\"/fc?code=\" + transformText).then(res => res.json()).then(data =>{\n      if(data.code == \"\"){\n        alert(\"Convert to flowchart code failed. Please modify the code.\")\n      }\n      else{\n        let result = this.sequenceFlowChart(data.code);\n        this.setState({ flowChartCode:result, visualizeExecutionStatus:true})\n      }\n      \n    });\n  }\n  \n  insertSampleCode = (e) =>{\n    var sampleCode = this.samples[e.target.id]\n    this.setState({\n      pseudoCodeStatus:false,\n      pseudoCode:\"\",\n      originCode:sampleCode.code\n    })\n  }\n\n\n  backToEditPage = () =>{\n    this.setState({visualizeExecutionStatus:false})\n  }\n\n  render(){\n    return(\n      <div className=\"App bg-dark\">\n        <Header\n        showTutorial = {()=>this.showTutorial()}\n        />\n        {this.state.visualizeExecutionStatus? <ExeVisualization \n          editCode={this.backToEditPage}\n          sourceCode = {this.state.originCode} \n          fcCode = {this.state.flowChartCode}/>:\n        \n        (<div className='container'> \n          <div className='row'>\n          <AceEditor\n              className=\"col\"\n              mode=\"python\"\n              theme=\"github\"\n              onChange={this.onsourceCodeChange}\n              onCursorChange = {(e)=>this.onFocusCode(e)}\n              name=\"PYTHON_CODE\"\n              editorProps={{\n                  $blockScrolling: true,\n              }}\n              setOptions={{\n                wrapBehavioursEnabled:true\n              }}\n              value={this.state.originCode}\n                />\n          \n            <div className='col-4'>\n              <button type=\"button\" className=\"btn btn-warning m-4 pta-btn-text\" id=\"convert-code\" onClick={()=>this.convertCode()} style={{minWidth:\"200px\"}}>Convert to Pseudo-code</button>\n              {/* <button type=\"button\" className=\"btn btn-warning m-4 pta-btn-text\" id=\"convert-fc\" onClick={()=>this.convertFlowChart()}style={{minWidth:\"200px\"}}>Convert to Flowchart</button> */}\n              <button type=\"button\" className=\"btn btn-warning m-4 pta-btn-text\" id=\"execution\" onClick={()=>this.justifyExecution()}style={{minWidth:\"200px\"}}>Convert to Flowchart</button>\n            </div>\n            <AceEditor\n                      className='col'\n                      onChange={this.ontargetCodeChange}\n                      name=\"PSEUDO_CODE\"\n                      editorProps={{\n                        $blockScrolling: true,\n                      }}\n                      setOptions={{\n                        wrapBehavioursEnabled:true\n\n                      }}\n                      highlightActiveLine={false}\n                      value={this.state.pseudoCode}\n                      markers={this.state.markers}\n                      />\n            \n            <p className='text-left text-light'>Samples</p>\n                <div className='row'>\n                  {this.samples.map((sample,index)=>(\n                    <div id={index} key={index} className='btn btn-warning col m-1 pta-btn-text' onClick={(e)=>{this.insertSampleCode(e)}}>{sample.type}</div>\n                  ))}\n                </div>\n          </div>\n        </div>)}\n        <Footer/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import reportWebVitals from './reportWebVitals';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst root = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,root\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}